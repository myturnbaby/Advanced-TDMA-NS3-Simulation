# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')
import os

def _list_sources(bld, suffix):
    root_dir = bld.path.abspath()
    res = [
        x for x in 
            [os.path.join("model", y) for y in os.listdir(os.path.join(root_dir, "model"))] 
        if x.endswith(suffix)
    ]
    res += [
        x for x in 
            [os.path.join("helper", y) for y in os.listdir(os.path.join(root_dir, "helper"))] 
        if x.endswith(suffix)
    ]
    return res

def build(bld):
    module = bld.create_ns3_module('mix-autonomy', ['internet', "mobility", "wifi", "wave", "network", "applications"])
    module.source = _list_sources(bld, ".cc")

    module_test = bld.create_ns3_module_test_library('mix-autonomy')
    module_test.source = [
        'test/mix-autonomy-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'mix-autonomy'
    headers.source = _list_sources(bld, ".h")

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

